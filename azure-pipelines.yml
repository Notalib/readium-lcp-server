trigger:
- master

variables:
  tag: $(Build.BuildId)

stages:
  - stage: Build
    displayName: Build and Push Docker Images
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          # Steg 1: List files för felsökning
          - script: ls -R /home/vsts/work/1/s/
            displayName: 'List files in source directory'

          # Steg 2: Logga in till ACR via Docker Registry service connection
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: 'docker_lcp'  # Namnet på din Docker Registry service connection

          # Steg 3: Bygg och pusha lcpserver-bild
          - task: Docker@2
            displayName: Build and Push lcpserver
            inputs:
              command: buildAndPush
              repository: 'lcslsdcontainer.azurecr.io/lcpserver'
              dockerfile: 'ci/Dockerfile'  # Direkt sökväg till Dockerfile
              tags: |
                $(tag)
              buildContext: '.'

          # Steg 4: Bygg och pusha lsdserver-bild
          - task: Docker@2
            displayName: Build and Push lsdserver
            inputs:
              command: buildAndPush
              repository: 'lcslsdcontainer.azurecr.io/lsdserver'
              dockerfile: 'ci/Dockerfile'  # Direkt sökväg till Dockerfile
              tags: |
                $(tag)
              buildContext: '.'

  - stage: Deploy
    displayName: Deploy to Azure App Service
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: 'developmentlcp'  # Eller skapa ett nytt miljö om nödvändigt
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                # Steg 1: Logga in till Azure
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: 'ACR-lcp'  # Kan användas för att referera till din subscription
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      # Om du behöver, logga in till Azure
                      az account show

                - task: AzureWebAppContainer@1
                  displayName: 'Deploy Docker Compose to Azure Web App'
                  inputs:
                    azureSubscription: 'ACR-lcp'  # Din Azure service connection
                    appName: 'myWebApp'  # Din Azure Web App
                    configurationFile: 'ci/docker-compose-azure.yml'

                # Steg 3: Deploy Docker Compose till Azure App Service
                - task: AzureWebAppContainer@1
                  displayName: 'Deploy Docker Compose to Azure Web App'
                  inputs:
                    azureSubscription: 'ACR-lcp'  # Din Azure service connection
                    appName: 'LSDLCDserver'  # Din Azure Web App
                    containers: |
                      [
                        {
                          "name": "nginx",
                          "image": "lcslsdcontainer.azurecr.io/nginx:latest",
                          "cpu": 0.5,
                          "memoryInGB": 1,
                          "environmentVariables": {}
                        },
                        {
                          "name": "lcpserver",
                          "image": "lcslsdcontainer.azurecr.io/lcpserver:$(tag)",
                          "cpu": 1,
                          "memoryInGB": 2,
                          "environmentVariables": {
                            "DATABASE_CONNECTION_STRING": "$(DATABASE_CONNECTION_STRING)",
                            "ENV_VAR1": "$(LCP_ENV_VAR1)",
                            "ENV_VAR2": "$(LCP_ENV_VAR2)"
                          }
                        },
                        {
                          "name": "lsdserver",
                          "image": "lcslsdcontainer.azurecr.io/lsdserver:$(tag)",
                          "cpu": 1,
                          "memoryInGB": 2,
                          "environmentVariables": {
                            "DATABASE_CONNECTION_STRING": "$(DATABASE_CONNECTION_STRING)",
                            "ENV_VAR1": "$(LSD_ENV_VAR1)",
                            "ENV_VAR2": "$(LSD_ENV_VAR2)"
                          }
                        }
                      ]